"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContractMethodFactory = void 0;
var contract_method_object_param_1 = require("./contract-method-object-param");
var contract_method_flat_param_1 = require("./contract-method-flat-param");
var contract_on_chain_view_1 = require("./contract-on-chain-view");
var ContractMethodFactory = /** @class */ (function () {
    function ContractMethodFactory(provider, contractAddress) {
        this.provider = provider;
        this.contractAddress = contractAddress;
    }
    ;
    ContractMethodFactory.prototype.createContractMethodFlatParams = function (smartContractMethodSchema, smartContractMethodName, args, isMultipleEntrypoint, isAnonymous) {
        if (isMultipleEntrypoint === void 0) { isMultipleEntrypoint = true; }
        if (isAnonymous === void 0) { isAnonymous = false; }
        return new contract_method_flat_param_1.ContractMethod(this.provider, this.contractAddress, smartContractMethodSchema, smartContractMethodName, args, isMultipleEntrypoint, isAnonymous);
    };
    ContractMethodFactory.prototype.createContractMethodObjectParam = function (smartContractMethodSchema, smartContractMethodName, args, isMultipleEntrypoint, isAnonymous) {
        if (isMultipleEntrypoint === void 0) { isMultipleEntrypoint = true; }
        if (isAnonymous === void 0) { isAnonymous = false; }
        return new contract_method_object_param_1.ContractMethodObject(this.provider, this.contractAddress, smartContractMethodSchema, smartContractMethodName, args, isMultipleEntrypoint, isAnonymous);
    };
    ContractMethodFactory.prototype.createContractViewObjectParam = function (rpc, smartContractViewSchema, contractStorageType, contractStorageValue, viewArgs) {
        return new contract_on_chain_view_1.OnChainView(rpc, this.contractAddress, smartContractViewSchema, contractStorageType, contractStorageValue, viewArgs);
    };
    return ContractMethodFactory;
}());
exports.ContractMethodFactory = ContractMethodFactory;
//# sourceMappingURL=contract-method-factory.js.map